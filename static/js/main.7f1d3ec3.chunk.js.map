{"version":3,"sources":["components/Logo.js","components/Header.js","components/actions/Rewind.js","components/actions/Dislike.js","components/actions/Like.js","components/actions/Superlike.js","components/Actions.js","components/Person.js","components/LikedPerson.js","components/Lonely.js","App.js","serviceWorker.js","index.js"],"names":["Logo","src","alt","Header","className","type","Rewind","Dislike","userId","modifySuperficialChoices","onClick","Like","SuperLike","Actions","person","id","Person","name","desc","age","image","LikedPerson","Lonely","activeUserImage","likedUsers","superLikedUsers","length","map","item","key","App","useState","data","people","setPeople","setLikedUsers","setSuperLikedUsers","dislikedUsers","setDislikedUsers","removedPersonFromDataSrc","peopleSource","filter","user","action","newPeople","newLikedUsers","newSuperLikedUsers","newDislikeUsers","includes","push","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f1d3ec3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Logo = () => (\r\n  <div>\r\n    <img src=\"/images/misc/logo.png\" alt=\"Tinder Logo\" />\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <div className=\"fl\">\r\n      <button type=\"button\">\r\n        <img src=\"/images/misc/user.png\" alt=\"User Settings\" />\r\n      </button>\r\n    </div>\r\n\r\n    <div className=\"fl\">\r\n      <Logo />\r\n    </div>\r\n\r\n    <div className=\"fl\">\r\n      <button type=\"button\">\r\n        <img src=\"/images/misc/messages.png\" alt=\"View Messages\" />\r\n      </button>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Rewind = () => (\r\n  <button type=\"button\">\r\n    <img src=\"/images/misc/rewind.png\" alt=\"Rewind User\" />\r\n  </button>\r\n);\r\n\r\nexport default Rewind;\r\n","import React from \"react\";\r\n\r\nconst Dislike = ({ userId, modifySuperficialChoices }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={() => modifySuperficialChoices(userId, \"ADD_TO_DISLIKED_USER\")}\r\n  >\r\n    <img src=\"/images/misc/dislike.png\" alt=\"Dislike User\" />\r\n  </button>\r\n);\r\n\r\nexport default Dislike;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ userId, modifySuperficialChoices }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={() => modifySuperficialChoices(userId, \"ADD_TO_LIKED_USER\")}\r\n  >\r\n    <img src=\"/images/misc/like.png\" alt=\"Like User\" />\r\n  </button>\r\n);\r\n\r\nexport default Like;\r\n","import React from \"react\";\r\n\r\nconst SuperLike = ({ userId, modifySuperficialChoices }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={() => modifySuperficialChoices(userId, \"ADD_TO_SUPERLIKED_USER\")}\r\n  >\r\n    <img src=\"/images/misc/superlike.png\" alt=\"SuperLike User\" />\r\n  </button>\r\n);\r\n\r\nexport default SuperLike;\r\n","import React from \"react\";\r\nimport Rewind from \"./actions/Rewind\";\r\nimport Dislike from \"./actions/Dislike\";\r\nimport Like from \"./actions/Like\";\r\nimport SuperLike from \"./actions/Superlike\";\r\n\r\nconst Actions = ({ person, modifySuperficialChoices }) => (\r\n  <div id=\"actions\">\r\n    <Rewind userId={person.id} />\r\n    <Dislike\r\n      userId={person.id}\r\n      modifySuperficialChoices={modifySuperficialChoices}\r\n    />\r\n    <Like\r\n      userId={person.id}\r\n      modifySuperficialChoices={modifySuperficialChoices}\r\n    />\r\n    <SuperLike\r\n      userId={person.id}\r\n      modifySuperficialChoices={modifySuperficialChoices}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Actions;\r\n","import React from \"react\";\r\nimport Actions from \"./Actions\";\r\nimport App from \"../App\";\r\n\r\nconst Person = ({ person, modifySuperficialChoices }) => {\r\n  const { name, desc, age, image } = person;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"person\">\r\n        <div className=\"person-photo\">\r\n          <img src={`/images/users/${image}`} alt={name} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"person-description\">\r\n        <div className=\"person-name-age\">\r\n          <p className=\"person-name-age\">\r\n            {name}, <span>{age}</span>\r\n          </p>\r\n          <p className=\"person-info\">{desc}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <Actions\r\n        person={person}\r\n        modifySuperficialChoices={modifySuperficialChoices}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\n\r\nconst LikedPerson = ({ person }) => (\r\n  <div className=\"liked-person\">\r\n    <div className=\"liked-person-image\">\r\n      <img\r\n        src={`/images/users/${person.image}`}\r\n        alt={`You liked ${person.name}`}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LikedPerson;\r\n","import React from \"react\";\r\nimport LikedPerson from \"./LikedPerson\";\r\n\r\nconst Lonely = ({ activeUserImage, likedUsers, superLikedUsers }) => (\r\n  <div id=\"lonely\">\r\n    <p>There's no new around you.</p>\r\n\r\n    <span className=\"pulse\">\r\n      <img src={`/images/users/${activeUserImage}`} alt=\"You . . . \" />\r\n    </span>\r\n\r\n    <div id=\"liked-people\">\r\n      <p>\r\n        {likedUsers.length > 0\r\n          ? \"People you liked...let's hope they like you too!\"\r\n          : \"\"}\r\n      </p>\r\n      {likedUsers.map(item => (\r\n        <LikedPerson key={item.id} person={item} />\r\n      ))}\r\n\r\n      <p>{superLikedUsers.length > 0 ? \"People you super liked!\" : \"\"}</p>\r\n\r\n      {superLikedUsers.map(item => (\r\n        <LikedPerson key={item.id} person={item} />\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Lonely;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Person from \"./components/Person\";\nimport Lonely from \"./components/Lonely\";\nimport data from \"./data.json\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [people, setPeople] = useState(data);\n  const [likedUsers, setLikedUsers] = useState([]);\n  const [superLikedUsers, setSuperLikedUsers] = useState([]);\n  const [dislikedUsers, setDislikedUsers] = useState([]);\n  const activeUser = 0;\n\n  const removedPersonFromDataSrc = (peopleSource, userId) =>\n    peopleSource.filter(user => user.id !== userId);\n\n  const modifySuperficialChoices = (userId, action) => {\n    const newPeople = [...people];\n    const newLikedUsers = [...likedUsers];\n    const newSuperLikedUsers = [...superLikedUsers];\n    const newDislikeUsers = [...dislikedUsers];\n\n    switch (action) {\n      case \"ADD_TO_LIKED_USER\":\n        if (!people[activeUser].likedUsers.includes(userId)) {\n          newPeople[activeUser].likedUsers.push(userId);\n          newLikedUsers.push(data[userId]);\n\n          setLikedUsers(newLikedUsers);\n          setPeople(removedPersonFromDataSrc(people, userId));\n        }\n        break;\n      case \"ADD_TO_DISLIKED_USER\":\n        if (!people[activeUser].dislikedUsers.includes(userId)) {\n          newPeople[activeUser].dislikedUsers.push(userId);\n          newDislikeUsers.push(data[userId]);\n\n          setDislikedUsers(newLikedUsers);\n          setPeople(removedPersonFromDataSrc(people, userId));\n        }\n        break;\n      case \"ADD_TO_SUPERLIKED_USER\":\n        if (!people[activeUser].superLikedUsers.includes(userId)) {\n          newPeople[activeUser].superLikedUsers.push(userId);\n          newSuperLikedUsers.push(data[userId]);\n\n          setSuperLikedUsers(newSuperLikedUsers);\n          setPeople(removedPersonFromDataSrc(people, userId));\n        }\n        break;\n      default:\n        return people;\n    }\n  };\n  return (\n    <div className=\"app\">\n      <Header />\n      {people[1] ? (\n        <Person\n          key={people[1].id}\n          person={people[1]}\n          modifySuperficialChoices={modifySuperficialChoices}\n          likedUsers={likedUsers}\n        />\n      ) : (\n        <Lonely\n          activeUserImage={people[activeUser].image}\n          likedUsers={likedUsers}\n          superLikedUsers={superLikedUsers}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}